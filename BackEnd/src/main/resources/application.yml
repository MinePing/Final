spring:
  application:
    name: mineping
  profiles:
    active: dev
  config:
    import: application-secret.yml
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

gemini:
  api-key: ${GEMINI_API_KEY}
stablediffusion:
  api-key: ${STABLEDIFFUSION_API_KEY}
business:
  api-key: ${BUSINESS_API_KEY}
nts:
  api:
    url: https://api.odcloud.kr/api/nts-businessman/v1/status
    key: ${BUSINESS_API_KEY}

jwt:
  secret: ${JWT_SECRET}
  expiration: 60

aws:
  access-key-id: ${AWS_ACCESS_KEY_ID}
  secret-access-key: ${AWS_SECRET_ACCESS_KEY}
  s3:
    bucket-name: ${AWS_S3_BUCKET}
    region: ap-northeast-2
  cloudfront:
    domain: ${AWS_CLOUDFRONT_DOMAIN}
mail:
  host: ${MAIL_HOST}
  port: ${MAIL_PORT}
  username: ${MAIL_USERNAME}
  password: ${MAIL_PASSWORD}
  properties:
    mail:
      smtp:
        auth: true
        timeout: 5000
        starttls:
          enable: true
  default-encoding: UTF-8

---
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, email, profile
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub
---
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/mineping?serverTimezone=Asia/Seoul
    username: mine01
    password: pass01

  jpa:
    hibernate:
      ddl-auto: update 
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true

  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 100MB

server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

---
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: RDB URL
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: prod_user
    password: prod_pass

  jpa:
    hibernate:
      ddl-auto: validate  # 운영환경에서는 validate 또는 none 권장
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB

server:
  port: 8001
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
logging:
  level:
    root: info