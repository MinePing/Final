spring:
  application:
    name: mineping
  profiles:
    active: dev
gemini:
  api-key: ${GEMINI_API_KEY:제미니 API키}
stablediffusion:
  api-key: ${STABLEDIFFUSION_API_KEY:test-stablediffusion-api-key}
business:
  api-key: ${BUSINESS_API_KEY:국세청 인코딩 키}
nts:
  api:
    url: https://api.odcloud.kr/api/nts-businessman/v1/status
    key: ${BUSINESS_API_KEY:국세청 API 키}

jwt:
  secret: mineping-jwt-secret-key-2024-very-long-and-secure-key-for-development
  expiration: 60
# AWS S3 설정
aws:
  access-key-id: AWS 엑세스 키
  secret-access-key: 엑세스 비밀번호
  s3:
    bucket-name: myping-images
    region: ap-northeast-2
  cloudfront:
    domain: dvr2ybzswd4qy.cloudfront.net
mail:
    host: smtp.gmail.com
    port: 587
    username: 구글이메일
    password: 앱 보안 비밀번호
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true
    default-encoding: UTF-8

---
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 구글 클라우드 클라이언트 아이디
            client-secret: 구글 클라우드 클라이언트 시크릿키
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, email, profile
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub
---
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/mineping?serverTimezone=Asia/Seoul
    username: ${sql아이디}
    password: ${sql비밀번호}

  jpa:
    hibernate:
      ddl-auto: update 
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true

  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 100MB

server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

---
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: RDB URL
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: prod_user
    password: prod_pass

  jpa:
    hibernate:
      ddl-auto: validate  # 운영환경에서는 validate 또는 none 권장
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB

server:
  port: 8001
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
logging:
  level:
    root: info